<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aotain.zongfen.mapper.general.ZfV2GenIpImporttaskMapper">
  <resultMap id="BaseResultMap" type="com.aotain.zongfen.model.general.ZfV2GenIpImporttask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="filename" jdbcType="VARCHAR" property="filename" />
    <result column="import_type" jdbcType="CHAR" property="importType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="result_file" jdbcType="VARCHAR" property="resultFile" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from zf_v2_gen_ip_importtask
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aotain.zongfen.model.general.ZfV2GenIpImporttask">
    insert into zf_v2_gen_ip_importtask (task_id, filename, import_type,
      status, result_file, userid,server_ip,
      create_time, finish_time)
    values (#{taskId,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, #{importType,jdbcType=CHAR}, 
      #{status,jdbcType=INTEGER}, #{resultFile,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{serverIp},
      #{createTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.aotain.zongfen.model.general.ZfV2GenIpImporttask">
    update zf_v2_gen_ip_importtask
    set filename = #{filename,jdbcType=VARCHAR},
      import_type = #{importType,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      result_file = #{resultFile,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      server_ip = #{serverIp},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select task_id, filename, import_type, status, result_file, userid, create_time,
    finish_time
    from zf_v2_gen_ip_importtask
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select task_id, filename, import_type, status, result_file, userid, create_time,
    finish_time
    from zf_v2_gen_ip_importtask ORDER BY task_id DESC limit 1;
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select task_id, filename, import_type, status, result_file, userid, create_time,
    finish_time
    from zf_v2_gen_ip_importtask WHERE userid=#{userid} ORDER BY task_id DESC limit 1;
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select task_id, filename, import_type, status, result_file, userid, create_time,
    finish_time
    from zf_v2_gen_ip_importtask;
  </select>
</mapper>